n
n=1
n=10
print(n)
n<-15
n
5->n
n
n=n+1
rnorm(1)n =
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(10)
ls()
n2=100
ls()
name="Carmen"
ls()
ls(pattern = "m")
ls(pattern = "n")
ls(pattern = "^n")
oo=5
ls(pattern = "^n")
oon=5
ls(pattern = "^n")
ls.str()
M=data.frame(n,n2,name)
View(M)
View(M)
help(data)
n>5
'd
n=5
''
'
fc
?View
View(USArrests)
View(USArrests)
Murder
USArrests
USArrests(1;1)
USArrests(1,1)
USArrests(1)
USArrests[1]
USArrests[1;1]
USArrests[2]
USArrests[0]
View(M)
View(M)
x=1:30
x*21
x*x
test=matrix(1:6,2,3)
View(test)
View(test)
V1
test(1)
test[1]
test[2]
test[3]
test[]
test[1,1]
test[1,2]
test[1,3]
test[1,3]
:
x <- 1:4; n <- 10; M <- c(10, 35); y <- 2:4
c(10,35)
c(10,35)
c
?c
c(n,n2)
L1=list(x,y)
View(L1)
L1[2]
test
test[1,:]
test[1,1]
test[1,]
test[,2]
knitr::opts_chunk$set(echo = TRUE, message=F,warning=F)
rm(list=ls())
nb_mailles=36
population_min=2500
library(tidyverse)
library(FactoMineR)
library(spdep)
library(sf)
library(readxl)
library(leaflet)
library(htmlwidgets)
load("Données/Donnees_Logement_2017.RData")
importsAirDNA <- read_excel("Données/stat_airdna_aout2020_mod.xlsx", range = "A4:I364")
Import_carteCommunesCorses=st_read("Données/SHP_COMMUNES/COMMUNE.shp")
carteCommunesCorses=Import_carteCommunesCorses %>% select(INSEE_COM,geometry)
colnames(carteCommunesCorses)[1]="CODGEO"
carteCommunesCorses=carteCommunesCorses %>% arrange(CODGEO)
carteCommunesCorses <- st_transform(carteCommunesCorses, crs = 4326)
airDNA=importsAirDNA %>% select(2,4)
colnames(airDNA)=c("CODGEO","Loc.actives")
Donnees_Logement_2017=Donnees_Logement_2017 %>% inner_join(airDNA, by="CODGEO")
Indicateurs_parCommune= Donnees_Logement_2017 %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / tot_lgmt, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb=round(100*Loc.actives/LOG, 1)) %>%
select(CODGEO,LIBGEO,POP,LOG,contains("indic"))
Indicateurs_parCommune=Indicateurs_parCommune %>% mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
winsorisation= function (x, prob.min = 0.01, prob.max = .99){
a <- quantile(x, probs = c(prob.min, prob.max))
x[x > a[2]] <- a[2]
x[x < a[1]] <- a[1]
return(x)
}
listeIndicateurs=Indicateurs_parCommune %>% select(contains("indic")) %>% names()
Indicateurs_parCommune[listeIndicateurs]=apply(Indicateurs_parCommune[listeIndicateurs],MARGIN = 2, FUN = winsorisation)
Indicateurs_parCommune_valeurs=Indicateurs_parCommune[listeIndicateurs]
carteCommunesCorses_spdf=carteCommunesCorses %>% left_join(Indicateurs_parCommune,by="CODGEO")%>% select(CODGEO,LIBGEO,POP) %>%  as("Spatial")
table_voisinage=poly2nb(carteCommunesCorses_spdf,queen=F)
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F)
nb_dim <- which(ACP_parCommunes$eig[, 3] > 80)[1]
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F,ncp = nb_dim)
donnees_pondérations=ACP_parCommunes$ind$coord
pondérations=nbcosts(table_voisinage, data = donnees_pondérations)
table_voisinage_pondérée=nb2listw(table_voisinage, glist = pondérations, style = "C")
arbre_poids_minimal <- mstree(table_voisinage_pondérée)
resultat_skater=skater(edges = arbre_poids_minimal[,1:2],data=donnees_pondérations,ncuts=nb_mailles-1,crit=population_min,vec.crit=Donnees_Logement_2017$POP)
carteMailles=carteCommunesCorses %>% mutate(maille=resultat_skater$groups) %>%  group_by(maille) %>%  summarise(geometry = st_union(geometry))
Maillage=data.frame(CODGEO=Indicateurs_parCommune$CODGEO,maille=resultat_skater$groups)
Indicateurs_parMaille=Maillage %>%
left_join(Donnees_Logement_2017, by="CODGEO") %>%
group_by(maille) %>%
summarise_if(is.numeric, funs(sum(., na.rm = TRUE))) %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / tot_lgmt, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb=round(100*Loc.actives/LOG, 1)) %>%
select(maille,POP,LOG,contains("indic")) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parMaille_valeurs=Indicateurs_parMaille %>% select(contains("indic"))
Indicateurs_parMaille_valeurs=Indicateurs_parMaille_valeurs %>% apply(MARGIN = 2, FUN = winsorisation)
acp_parMailles=PCA(Indicateurs_parMaille_valeurs,ncp=5,graph=F)
hc4 <- HCPC(acp_parMailles, nb.clust = 4, consol = T, graph = F)
cl4 <- data.frame(maille = Indicateurs_parMaille$maille, cl_maille4 = hc4$data.clust[,"clust"])
carteMaillesSecteurs <- left_join(carteMailles, cl4, by = "maille")
carteCommunesCorses_merged <- left_join(carteCommunesCorses, Donnees_Logement_2017, by = "CODGEO")
carteCommunesCorses_sf <- st_as_sf(carteCommunesCorses_merged)
# Création d'une palette de couleurs pour les secteurs
palSecteurs = colorFactor(palette = c("seagreen3", "orange2","blueviolet", "deeppink"), domain = carteMaillesSecteurs$cl_maille4)
# Création d'une carte des communes avec un trait gris fin
carteCommunes = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = "white",
fillOpacity = 0.8,
color = "gray",
weight = 1)
# Ajout des mailles avec un trait noir plus épais et colorées selon le secteur
carte=carteCommunes %>%
addPolygons(data = carteMaillesSecteurs,
fillColor = ~palSecteurs(cl_maille4),
fillOpacity = 0.8,
color = "black",
weight = 2)
# Utilisez une palette de couleurs pour représenter différentes valeurs de la 4ème colonne
couleurs <- colorNumeric(palette = "Blues", domain = carteCommunesCorses_merged$LOG)
# Créez la carte avec la nouvelle couleur en fonction de la 4ème colonne
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~couleurs(as.factor(LOG)),
fillOpacity = 0.8,
color = "gray",
weight = 1)
# Créez la carte avec la nouvelle couleur en fonction de la 4ème colonne
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~couleurs(LOG),
fillOpacity = 0.8,
color = "gray",
weight = 1)
# Affichez la légende de la palette de couleurs
carte2 = carteCommunes %>% addLegend(pal = couleurs, values = ~LOG, title = "Titre de la légende")
carte2
unique(carteCommunesCorses_merged$LOG)
couleurs (200)
plot(couleurs(200))
plot(couleurs(2000))
plot(carteCommunes)
plot(carteCommunesCorses_spdf)
plot(carteCommunesCorses_spdf, colors=couleurs(10000))
couleurs(100)
couleurs(1000)
couleurs(10000)
palette <- colorBin(palette = "viridis", domain = carteCommunesCorses_sf$Donnees_Logement_2017[,4], bins = 5)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(Donnees_Logement_2017[,4]),
fillOpacity = 0.8,
color = "gray",
weight = 1)
palette <- colorBin(palette = "viridis", domain = Donnees_Logement_2017[,4], bins = 5)
palette <- colorBin(palette = "viridis", domain = as.numeric(Donnees_Logement_2017[,4]), bins = 5)
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "viridis", domain = carteCommunesCorses_sf$Donnees_Logement_2017[,4], bins = 5)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(Donnees_Logement_2017[,4]),
fillOpacity = 0.8,
color = "gray",
weight = 1)
vecteur_test <- 1:360
# Ajouter le vecteur de test à la dataframe
carteCommunesCorses_sf$test <- vecteur_test
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "viridis", domain = carteCommunesCorses_sf$test, bins = 5)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "viridis", domain = carteCommunesCorses_sf$test, bins = 100)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "viridis", domain = carteCommunesCorses_sf$test, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "Blues", domain = carteCommunesCorses_sf$test, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "Blues", domain = carteCommunesCorses_sf$test, bins = 2)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "heat", domain = carteCommunesCorses_sf$test, bins = 100)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "Heat", domain = carteCommunesCorses_sf$test, bins = 100)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "Heat", domain = carteCommunesCorses_sf$test, bins = 2)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "magma", domain = carteCommunesCorses_sf$test, bins = 2)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
?colorBin
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "defaut", domain = carteCommunesCorses_sf$test, bins = 2)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "heat.colors", domain = carteCommunesCorses_sf$test, bins = 2)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
print(palette)
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "YlOrRd", domain = carteCommunesCorses_sf$test, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
vecteur_test <- Donnees_Logement_2017$LOG
# Ajouter le vecteur de test à la dataframe
carteCommunesCorses_sf$test <- vecteur_test
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "YlOrRd", domain = carteCommunesCorses_sf$test, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
vecteur_test <- Donnees_Logement_2017$LOG/2
# Ajouter le vecteur de test à la dataframe
carteCommunesCorses_sf$test <- vecteur_test
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "YlOrRd", domain = carteCommunesCorses_sf$test, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
vecteur_test <- Donnees_Logement_2017$LOG/10
vecteur_test <- Donnees_Logement_2017$LOG
# Ajouter le vecteur de test à la dataframe
carteCommunesCorses_sf$test <- vecteur_test
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "YlOrRd", domain = carteCommunesCorses_sf$test/5, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
vecteur_test <- Indicateurs_parCommune_valeurs$indic.transac
# Ajouter le vecteur de test à la dataframe
carteCommunesCorses_sf$test <- vecteur_test
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "YlOrRd", domain = carteCommunesCorses_sf$test, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "YlOrRd", domain = carteCommunesCorses_sf$test*1.5, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "YlOrRd", domain = carteCommunesCorses_sf$test, bins = 8)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = "YlOrRd", domain = carteCommunesCorses_sf$test, bins = 20)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = heat.colors(10), domain = carteCommunesCorses_sf$test, bins = 20)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = heat.colors(1), domain = carteCommunesCorses_sf$test, bins = 20)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = heat.colors(20), domain = carteCommunesCorses_sf$test, bins = 20)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = rev(heat.colors(20)), domain = carteCommunesCorses_sf$test, bins = 20)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
# Créer une palette de couleurs avec colorBin()
palette <- colorBin(palette = rev(heat.colors(360)), domain = carteCommunesCorses_sf$test, bins = 360)
carte2 = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = ~palette(test),
fillOpacity = 0.8,
color = "gray",
weight = 1)
carte2
setwd("C:/Users/jvluc/Mon Drive/Travail/Maille habitat/Maille_Habitat_MAJ_Données")
